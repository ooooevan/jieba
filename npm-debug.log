0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'publish' ]
2 info using npm@3.5.2
3 info using node@v4.2.6
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/mnt/e/learnProjects/jieba',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/evan/.npm/ooooevan-jieba/1.0.0/package.tgz not in flight; packing
9 info lifecycle ooooevan-jieba@1.0.0~prepublish: ooooevan-jieba@1.0.0
10 silly lifecycle ooooevan-jieba@1.0.0~prepublish: no script for prepublish, continuing
11 verbose tar pack [ '/home/evan/.npm/ooooevan-jieba/1.0.0/package.tgz',
11 verbose tar pack   '/mnt/e/learnProjects/jieba' ]
12 verbose tarball /home/evan/.npm/ooooevan-jieba/1.0.0/package.tgz
13 verbose folder /mnt/e/learnProjects/jieba
14 verbose addLocalTarball adding from inside cache /home/evan/.npm/ooooevan-jieba/1.0.0/package.tgz
15 silly cache afterAdd ooooevan-jieba@1.0.0
16 verbose afterAdd /home/evan/.npm/ooooevan-jieba/1.0.0/package/package.json not in flight; writing
17 verbose afterAdd /home/evan/.npm/ooooevan-jieba/1.0.0/package/package.json written
18 silly publish { name: 'ooooevan-jieba',
18 silly publish   version: '1.0.0',
18 silly publish   description: 'test my jieba module',
18 silly publish   main: 'index.js',
18 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
18 silly publish   keywords: [],
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git+https://github.com/ooooevan/ooooevan-jieba.git' },
18 silly publish   author: { name: 'ooooevan@163.com' },
18 silly publish   license: 'ISC',
18 silly publish   readme: '## 学习jieba分词\n\n实现了cut、cutHMM、cutAll、cutForSearch等方法\n\n\n存在的问题：代码还没整理、cutHMM太慢未优化(字符串太长时构建成树耗时，内存不足)等等\n\n参考：[https://github.com/ustcdane/annotated_jieba](https://github.com/ustcdane/annotated_jieba)\n\n### 过程中的问题\n\n### 1、同样的词库，自己的cut(str, true)和hmm方法和官方的结果不一致，cut(str)一样\n\n如: \n```js\nstr = \'到MI京研大厦\'\nnodejieba.cut(str); // [\'到\', \'M\', \'I\', \'京\', \'研\', \'大厦\']\nnodejieba.cut(str, true); // [\'到\', \'MI\', \'京研\', \'大厦\']\nnodejieba.cutHMM(str);  // [ \'到\', \'MI\', \'京\', \'研大厦\' ]\ncut(str, true);   // [ \'到M\', \'I京\', \'研\', \'大厦\' ]\nhmm(str);  // [\'到M\', \'I京\', \'研大\', \'厦\']\n```\n\n通过调试看源码，发现了hmm的两个正则匹配。中英文要区分\n```js\n/([\\u4E00-\\u9FD5]+)/;   //将中文和非中文分开\n/([a-zA-Z0-9]+(?:\\.\\d+)?%?)/; //匹配英文数字及其他符号，可以将英文数字和其他字符分开，后面的%符号挺奇怪的，是想匹配百分数吗\n/([a-zA-Z0-9]+(?:\\.\\d)?)|([0-9]+(?:\\.\\d)?%?)/;  //匹配百分数，数字才能匹配百分号\n```\n在hmm函数添加了相关代码后，上面的问题解决了\n\n#### 2、hmm函数构建根据BEMS构建树未优化，耗时且太长会导致内存不足\n\n通过比较，我发现是我和官方实现的方式不同，我的方式是：\n\n```js\nconst treeObj = getWordTree(str); //将字符串转为一个大对象，里面包含需要的字符节点相关数据\nvar treeArr = recursion(treeObj);  //将大对象转为同等的二维数组，里面有2**n个数组，也就是2**n个不同路径\nvar conarr = getAppropriate(treeArr); //从2**n个数组中选出最优的一个数组\n```\n\n这种方法很直白，是我根据hmm算法描述写的，有太多不需要的数据，导致内存可能爆掉。是`2**n`个而不是`4**n`，因为每个字符在所在位置都只有两种类型而不是四种，如开头字符只可能是B或S，不能是E或M。\n\n```js\nstr = \'程序员\'\ntreeObj = {\n  b:{\n    next:{\n      e:{\n        next:{...}\n      },\n      m:{\n        next:{...}\n      }\n    },\n    value: -7.5608\n  },\n  s:{\n    next:{\n      s:{\n        next:{...}\n      },\n      b:{\n        next:{...}\n      }\n    },\n    value: -11.0326\n  }\n}\ntreeArr = [ //长度是8\n  [{type:B,value:-7.5608},{type:E,value:-8.363},{type:B,value:-9.5638}],\n  []\n  ...\n]\nconarr = [ //最优路径\n  {type: "B", value: -7.5608126080925, string: "程"},\n  {type: "M", value: -9.818418731874154, string: "序"},\n  {type: "E", value: -6.2620785681194855, string: "员"}\n]\n\n```\n在测试较长字符串时，会内存不足。因为这个过程存储了太多无用变量\n\n修改为官方的方式，思路如下小\n\n```js\nstr = \'程序员\'\nconst prevTrans = {   //上一个状态可能类型\n  B: [E, S],\n  E: [B, M],\n  M: [B, M],\n  S: [E, S]\n}\n\n"\'程\'的概率" = {B:\'\', E:\'\', M:\'\', S:\'\'}\n"\'序\'的概率" = {B:\'\', E:\'\', M:\'\', S:\'\'}\n"\'员\'的概率" = {B:\'\', E:\'\', M:\'\', S:\'\'}\n/*\n开头字符概率是确定的，后一个要根据前一个来确定。如\'序\'中的B，和前一个一起的可能类型组合是：EB或SB，则选择计算两种的较高概率的一种。\n所以概率表保存的是组合的概率，每个字符的概率都基于前n个字符的概率。这里和cut函数最大切分组合类似，只是那里是从后往前，这里是从前往后的\n"\'程\'的概率" = {B:\'\', E:\'\', M:\'\', S:\'\'} //保存字符\'程\'的不同类型的概率\n"\'序\'的概率" = {B:\'\', E:\'\', M:\'\', S:\'\'} //保存字符\'程序\'的不同类型的概率\n"\'员\'的概率" = {B:\'\', E:\'\', M:\'\', S:\'\'} //保存字符\'程序员\'的不同类型的概率\n*/\n\n// 概率可以确定了，只要在计算概率时，同时保存路径\n// 根据最后得到的最大概率类型，就可以得出是哪个路径了\npath = {B: "BEB", E: "BME", M: "BMM", S: "BES"}\n\n```\n\n改成官方的方式，果然好多了，再也不怕用太多内存了\n\n#### 3、自定义字典的路径问题\n\n没有测试时，处理路径是`path.resolve(__dirname, \'./xx.utf8\')`，直接写也行，因为还不用考虑不同路径\n当将它单独为一个模块时，用户可以调用`load`方法使用自定义字典，此时找不到自定义字典，因为路径还是相对模块自身的\n若在test目录执行`test.js`，能找到文件正常执行，在其他目录都找不到文件无法使用\n\n```\n├jieba\n│  ├─dict  #存储默认字典\n│  ├─test\n│  │  │─doc\n│  │  │─test.js  #测试位置\n│  │  └─user.dict.utf8  #字典文件\n│  ├─index.js  #模块位置\n│\n\n\n初步了解了一下，好像用path模块也不能解决的，因为它是相对自身文件的，在模块内部无法知道用户文件的相对路径，需要借助node模块打包相关方案解决\n\n\n\n\n```\n\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: 'a898a18168498fe11b587322e112bf00ec30d94a',
18 silly publish   bugs: { url: 'https://github.com/ooooevan/ooooevan-jieba/issues' },
18 silly publish   homepage: 'https://github.com/ooooevan/ooooevan-jieba#readme',
18 silly publish   _id: 'ooooevan-jieba@1.0.0',
18 silly publish   _shasum: '782e6a6bb4c6755ba3c8cbe9a488778d47bd80bd',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name ooooevan-jieba
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://registry.npmjs.org/
23 silly mapToRegistry uri https://registry.npmjs.org/ooooevan-jieba
24 verbose publish registryBase https://registry.npmjs.org/
25 silly publish uploading /home/evan/.npm/ooooevan-jieba/1.0.0/package.tgz
26 verbose request uri https://registry.npmjs.org/ooooevan-jieba
27 verbose request sending authorization for write operation
28 info attempt registry request try #1 at 3:46:51 PM
29 verbose request using bearer token for auth
30 verbose request id 1af1dfa98f40aa6d
31 http request PUT https://registry.npmjs.org/ooooevan-jieba
32 http 400 https://registry.npmjs.org/ooooevan-jieba
33 verbose headers { date: 'Sat, 09 Mar 2019 07:46:46 GMT',
33 verbose headers   'content-type': 'application/json',
33 verbose headers   'content-length': '98',
33 verbose headers   connection: 'keep-alive',
33 verbose headers   'set-cookie': [ '__cfduid=dfc7bab52b8eb905551d51405f8aa3b561552117596; expires=Sun, 08-Mar-20 07:46:36 GMT; path=/; domain=.registry.npmjs.org; HttpOnly' ],
33 verbose headers   'cf-ray': '4b4b6fa35c9b9955-LAX',
33 verbose headers   'expect-ct': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"',
33 verbose headers   vary: 'Accept-Encoding',
33 verbose headers   server: 'cloudflare' }
34 verbose request invalidating /home/evan/.npm/registry.npmjs.org/ooooevan-jieba on PUT
35 error publish Failed PUT 400
36 verbose stack Error: This package contains unacceptable content. Contact support@npmjs.com. : ooooevan-jieba
36 verbose stack     at makeError (/usr/share/npm/node_modules/npm-registry-client/lib/request.js:264:12)
36 verbose stack     at CachingRegistryClient.<anonymous> (/usr/share/npm/node_modules/npm-registry-client/lib/request.js:252:14)
36 verbose stack     at Request._callback (/usr/share/npm/node_modules/npm-registry-client/lib/request.js:172:14)
36 verbose stack     at Request.self.callback (/usr/share/npm/node_modules/request/request.js:198:22)
36 verbose stack     at emitTwo (events.js:87:13)
36 verbose stack     at Request.emit (events.js:172:7)
36 verbose stack     at Request.<anonymous> (/usr/share/npm/node_modules/request/request.js:1082:10)
36 verbose stack     at emitOne (events.js:82:20)
36 verbose stack     at Request.emit (events.js:169:7)
36 verbose stack     at IncomingMessage.<anonymous> (/usr/share/npm/node_modules/request/request.js:1009:12)
37 verbose statusCode 400
38 verbose pkgid ooooevan-jieba
39 verbose cwd /mnt/e/learnProjects/jieba
40 error Linux 4.4.0-17134-Microsoft
41 error argv "/usr/bin/nodejs" "/usr/bin/npm" "publish"
42 error node v4.2.6
43 error npm  v3.5.2
44 error code E400
45 error This package contains unacceptable content. Contact support@npmjs.com. : ooooevan-jieba
46 error If you need help, you may report this error at:
46 error     <https://github.com/npm/npm/issues>
47 verbose exit [ 1, true ]
